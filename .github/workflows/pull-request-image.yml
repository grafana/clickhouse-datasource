name: Create Docker image for local testing

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main

jobs:
  build:
    name: Build and archive plugin build artifacts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: '.nvmrc'

      - name: Install Go environment
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Install yarn dependencies
        run: yarn install
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Build
        run: go build -v ./...

      - name: Build Frontend
        run: yarn build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Archive plugin build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugin-dist
          path: |
            dist
          retention-days: 1

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    if: false
    steps:
      - name: Download plugin build artifacts
        uses: actions/download-artifact@v4
        id: download
        with:
          name: plugin-dist

      - name: Generate Dockerfile
        shell: bash
        env:
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
          EVENT_NAME: ${{ github.event_name }}
          PR_SHA: ${{ github.event.pull_request.head.sha }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo "FROM grafana/grafana-oss:latest

          # Make it as simple as possible to access the grafana instance for development purposes
          # Do NOT enable these settings in a public facing / production grafana instance
          ENV GF_AUTH_ANONYMOUS_ORG_ROLE "Admin"
          ENV GF_AUTH_ANONYMOUS_ENABLED "true"
          ENV GF_AUTH_BASIC_ENABLED "false"

          # Set development mode so plugins can be loaded without the need to sign
          ENV GF_DEFAULT_APP_MODE "development"

          # TODO: Cleanup script should remove images from closed PRs using these labels
          LABEL gh-sha="${PR_SHA}"
          LABEL gh-repo="${GITHUB_REPOSITORY_NAME}"
          LABEL gh-pr-number="${PR_NUMBER}"

          # Copy plugin build artifacts into the image
          COPY . /var/lib/grafana/plugins/${GITHUB_REPOSITORY_NAME}/" > Dockerfile

      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: grafana/plugin-builds:${{ github.event.pull_request.head.sha }}pre

      - name: Build Docker image for use with Docker save
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
        if: ${{github.event.pull_request.head.repo.full_name != github.repository}}
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: grafana/plugin-builds:${{ github.event.pull_request.head.sha }}pre

      - name: Save Docker image
        shell: bash
        run: docker save -o ${{ github.event.pull_request.head.sha }}pre.tar grafana/plugin-builds:${{ github.event.pull_request.head.sha }}pre

      - name: Archive Docker image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.pull_request.head.sha }}pre
          path: ${{ github.event.pull_request.head.sha }}pre.tar
          retention-days: 5

  add_pr_comment:
    name: Add PR comment
    permissions:
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    needs: push_to_registry
    if: github.event.pull_request.head.repo.full_name == github.repository && false
    steps:
      - name: Find previous comment (if any)
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: Use the following command to run this PR with Docker
      - name: Update comment on PR
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          issue-number: ${{ github.event.number }}
          body: |
            Use the following command to run this PR with Docker at http://localhost:3000:

              ```
              docker run --rm -p 3000:3000 grafana/plugin-builds:${{ github.event.pull_request.head.sha }}pre
              ```
      - name: Add comment to PR
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043
        with:
          issue-number: ${{ github.event.number }}
          body: |
            Use the following command to run this PR with Docker at http://localhost:3000:

              ```
              docker run --rm -p 3000:3000 grafana/plugin-builds:${{ github.event.pull_request.head.sha }}pre
